{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents\\\\code\\\\databases\\\\banking\\\\Bank-management-System\\\\bank-management-system\\\\frontend\\\\src\\\\Components\\\\transView.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nfunction TransactionViewer() {\n  const [acctype, setAccType] = useState('');\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchTransactions = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:8000/transactions/fetchTransactions\", {\n        acctype: acctype\n      });\n      const data = response.data;\n      if (response.status === 200) {\n        setTransactions(data.transactions); // Assuming the API returns data in { transactions: [...] } format\n      } else {\n        setError(data.error || 'Failed to fetch transactions');\n      }\n    } catch (error) {\n      console.error(\"Error fetching transactions:\", error);\n      setError(`Failed to fetch transactions: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (acctype) {\n      fetchTransactions();\n    }\n  }, [acctype]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: acctype,\n    onChange: e => setAccType(e.target.value),\n    placeholder: \"Enter account type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchTransactions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Fetch Transactions\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Loading...\") : error ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, error) : transactions.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, transactions.map((transaction, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"From Account: \", transaction.acc_from), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"To Account: \", transaction.acc_to), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Transaction Date: \", transaction.transaction_date), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Amount: \", transaction.amount), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"No transactions found\")));\n}\nexport default TransactionViewer;","map":{"version":3,"names":["React","useState","useEffect","axios","TransactionViewer","acctype","setAccType","transactions","setTransactions","loading","setLoading","error","setError","fetchTransactions","response","post","data","status","console","message","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","length","map","transaction","index","key","acc_from","acc_to","transaction_date","amount"],"sources":["C:/Documents/code/databases/banking/Bank-management-System/bank-management-system/frontend/src/Components/transView.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction TransactionViewer() {\r\n  const [acctype, setAccType] = useState('');\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchTransactions = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8000/transactions/fetchTransactions\", {\r\n        acctype: acctype,\r\n      });\r\n      const data = response.data;\r\n      if (response.status === 200) {\r\n        setTransactions(data.transactions); // Assuming the API returns data in { transactions: [...] } format\r\n      } else {\r\n        setError(data.error || 'Failed to fetch transactions');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching transactions:\", error);\r\n      setError(`Failed to fetch transactions: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (acctype) {\r\n      fetchTransactions();\r\n    }\r\n  }, [acctype]);\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={acctype}\r\n        onChange={(e) => setAccType(e.target.value)}\r\n        placeholder=\"Enter account type\"\r\n      />\r\n      <button onClick={fetchTransactions}>Fetch Transactions</button>\r\n\r\n      <div>\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : error ? (\r\n          <p>{error}</p>\r\n        ) : transactions.length > 0 ? (\r\n          <div>\r\n            {transactions.map((transaction, index) => (\r\n              <div key={index}>\r\n                <p>From Account: {transaction.acc_from}</p>\r\n                <p>To Account: {transaction.acc_to}</p>\r\n                <p>Transaction Date: {transaction.transaction_date}</p>\r\n                <p>Amount: {transaction.amount}</p>\r\n                <hr />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p>No transactions found</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionViewer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}