{"ast":null,"code":"var _jsxFileName = \"/Users/samarthpawan/Downloads/Dbms_final/Bank-management-System-DBMS-CS-F212/bank-management-system/frontend/src/Components/createCard.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nfunction CardForm() {\n  const [card, setCard] = useState({\n    f_name: '',\n    password: '',\n    cardType: ''\n  });\n  const {\n    username\n  } = useParams();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCard({\n      ...card,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Check if the provided f_name matches the username\n    if (card.f_name === username) {\n      try {\n        await axios.post('http://localhost:5000/api/cards', card);\n        alert('Card added successfully!');\n      } catch (error) {\n        console.error('Error adding card:', error);\n        alert(`Failed to add card: ${error.message}`);\n      }\n    } else {\n      // If the provided f_name does not match the username, show an error\n      alert('First name does not match the username.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"f_name\",\n    placeholder: \"First Name\",\n    value: card.f_name,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    value: card.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"cardType\",\n    value: card.cardType,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Select Card Type\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Credit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Credit\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Debit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Debit\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Prepaid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Prepaid\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Add Card\"));\n}\nexport default CardForm;","map":{"version":3,"names":["React","useState","axios","useParams","CardForm","card","setCard","f_name","password","cardType","username","handleChange","e","name","value","target","handleSubmit","preventDefault","post","alert","error","console","message","createElement","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange"],"sources":["/Users/samarthpawan/Downloads/Dbms_final/Bank-management-System-DBMS-CS-F212/bank-management-system/frontend/src/Components/createCard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nfunction CardForm() {\n  const [card, setCard] = useState({ f_name: '', password: '', cardType: '' });\n  const { username } = useParams();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setCard({ ...card, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Check if the provided f_name matches the username\n    if (card.f_name === username) {\n      try {\n        await axios.post('http://localhost:5000/api/cards', card);\n        alert('Card added successfully!');\n      } catch (error) {\n        console.error('Error adding card:', error);\n        alert(`Failed to add card: ${error.message}`);\n      }\n    } else {\n      // If the provided f_name does not match the username, show an error\n      alert('First name does not match the username.');\n    }\n  };\n  \n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"f_name\"\n        placeholder=\"First Name\"\n        value={card.f_name}\n        onChange={handleChange}\n      />\n      <input\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"Password\"\n        value={card.password}\n        onChange={handleChange}\n      />\n      <select\n        name=\"cardType\"\n        value={card.cardType}\n        onChange={handleChange}\n      >\n        <option value=\"\">Select Card Type</option>\n        <option value=\"Credit\">Credit</option>\n        <option value=\"Debit\">Debit</option>\n        <option value=\"Prepaid\">Prepaid</option>\n      </select>\n      <button type=\"submit\">Add Card</button>\n    </form>\n  );\n}\n\nexport default CardForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}