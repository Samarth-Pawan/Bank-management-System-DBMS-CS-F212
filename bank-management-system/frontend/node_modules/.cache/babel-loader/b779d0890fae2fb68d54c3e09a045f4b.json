{"ast":null,"code":"var _jsxFileName = \"/Users/samarthpawan/Downloads/Dbms_final/Bank-management-System-DBMS-CS-F212/bank-management-system/frontend/src/Components/transaction.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nfunction MoneyTransferForm() {\n  const [transferInfo, setTransferInfo] = useState({\n    amount: '',\n    receiverAccount: ''\n  });\n  const {\n    username\n  } = useParams();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTransferInfo({\n      ...transferInfo,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Check if the provided username matches the username in the URL\n    if (username === transferInfo.username) {\n      try {\n        const response = await axios.post('http://localhost:5000/api/transfer', transferInfo);\n        alert(response.data.message);\n      } catch (error) {\n        console.error('Error sending money:', error);\n        alert('Failed to send money!');\n      }\n    } else {\n      // If the provided username doesn't match the one in the URL, show an error\n      alert('Username does not match the URL.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"amount\",\n    placeholder: \"Amount\",\n    value: transferInfo.amount,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"receiverAccount\",\n    placeholder: \"Receiver Account Number\",\n    value: transferInfo.receiverAccount,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Send Money\"));\n}\nexport default MoneyTransferForm;","map":{"version":3,"names":["React","useState","axios","useParams","MoneyTransferForm","transferInfo","setTransferInfo","amount","receiverAccount","username","handleChange","e","name","value","target","handleSubmit","preventDefault","response","post","alert","data","message","error","console","createElement","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange"],"sources":["/Users/samarthpawan/Downloads/Dbms_final/Bank-management-System-DBMS-CS-F212/bank-management-system/frontend/src/Components/transaction.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nfunction MoneyTransferForm() {\n  const [transferInfo, setTransferInfo] = useState({ amount: '', receiverAccount: '' });\n  const { username } = useParams();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setTransferInfo({ ...transferInfo, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Check if the provided username matches the username in the URL\n    if (username === transferInfo.username) {\n      try {\n        const response = await axios.post('http://localhost:5000/api/transfer', transferInfo);\n        alert(response.data.message);\n      } catch (error) {\n        console.error('Error sending money:', error);\n        alert('Failed to send money!');\n      }\n    } else {\n      // If the provided username doesn't match the one in the URL, show an error\n      alert('Username does not match the URL.');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"number\"\n        name=\"amount\"\n        placeholder=\"Amount\"\n        value={transferInfo.amount}\n        onChange={handleChange}\n      />\n      <input\n        type=\"number\"\n        name=\"receiverAccount\"\n        placeholder=\"Receiver Account Number\"\n        value={transferInfo.receiverAccount}\n        onChange={handleChange}\n      />\n      <button type=\"submit\">Send Money</button>\n    </form>\n  );\n}\n\nexport default MoneyTransferForm;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,SAASC,iBAAiBA,CAAA,EAAG;EAC3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC;IAAEM,MAAM,EAAE,EAAE;IAAEC,eAAe,EAAE;EAAG,CAAC,CAAC;EACrF,MAAM;IAAEC;EAAS,CAAC,GAAGN,SAAS,CAAC,CAAC;EAEhC,MAAMO,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCR,eAAe,CAAC;MAAE,GAAGD,YAAY;MAAE,CAACO,IAAI,GAAGC;IAAM,CAAC,CAAC;EACrD,CAAC;EAED,MAAME,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB;IACA,IAAIP,QAAQ,KAAKJ,YAAY,CAACI,QAAQ,EAAE;MACtC,IAAI;QACF,MAAMQ,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,oCAAoC,EAAEb,YAAY,CAAC;QACrFc,KAAK,CAACF,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CH,KAAK,CAAC,uBAAuB,CAAC;MAChC;IACF,CAAC,MAAM;MACL;MACAA,KAAK,CAAC,kCAAkC,CAAC;IAC3C;EACF,CAAC;EAED,oBACEnB,KAAA,CAAAwB,aAAA;IAAMC,QAAQ,EAAEV,YAAa;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3B/B,KAAA,CAAAwB,aAAA;IACEQ,IAAI,EAAC,QAAQ;IACbpB,IAAI,EAAC,QAAQ;IACbqB,WAAW,EAAC,QAAQ;IACpBpB,KAAK,EAAER,YAAY,CAACE,MAAO;IAC3B2B,QAAQ,EAAExB,YAAa;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACxB,CAAC,eACF/B,KAAA,CAAAwB,aAAA;IACEQ,IAAI,EAAC,QAAQ;IACbpB,IAAI,EAAC,iBAAiB;IACtBqB,WAAW,EAAC,yBAAyB;IACrCpB,KAAK,EAAER,YAAY,CAACG,eAAgB;IACpC0B,QAAQ,EAAExB,YAAa;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACxB,CAAC,eACF/B,KAAA,CAAAwB,aAAA;IAAQQ,IAAI,EAAC,QAAQ;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,YAAkB,CACpC,CAAC;AAEX;AAEA,eAAe3B,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module"}